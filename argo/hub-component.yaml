version: 1
kind: component

requires:
  - kubernetes
  - helm

parameters:
  - name: ingress
    parameters:
      - name: protocol
        value: http
      - name: hosts
        empty: allow
        env: INGRESS_HOSTS

  - name: kubernetes
    parameters:
      - name: namespace
        value: argo
        env: NAMESPACE

  - name: argo
    parameters:
      - name: caBundleSecretName
        empty: allow
        env: ROOT_CA_SECRET_NAME
      - name: version
        value: v3.3.10
      - name: image.registry
        value: quay.io
      - name: image.tag
        value: ${argo.version}
      - name: controller.image.repository
        value: argoproj/workflow-controller
      - name: executor.image.repository
        value: argoproj/argoexec
      - name: server.image.repository
        value: argoproj/argocli
      - name: server.authMode
        value:
          - server
          - client
      - name: server.oidc
        parameters:
          - name: issuer
            empty: allow
          - name: clientId
            value: ${hub.componentName}-sso
          - name: clientSecret
          - name: regirectUrl
            value: ${ingress.protocol}://${ingress.hosts}/oauth2/callback
          - name: secretName
            value: ${hub.componentName}-serve-sso
      - name: server.workflowNamespaces
        value:
          - ${kubernetes.namespace}

  - name: bucket
    empty: allow
    parameters:
      - name: name
        env: BUCKET_NAME
      - name: endpoint
      - name: region
        value: us-east-1
      - name: accessKey
      - name: secretKey

  - name: azure.storageAccount
    empty: allow
    parameters:
      - name: name
        env: AZURE_STORAGE_ACCOUNT_NAME
      - name: containerName
      - name: accessKey

  - name: helm
    parameters:
      - name: repo
        env: HELM_REPO
        value: https://argoproj.github.io/argo-helm
      - name: chart
        value: argo-workflows
        env: HELM_CHART
      - name: version
        value: 0.33.1
        env: HELM_CHART_VERSION
      - name: crd
        env: CRD
        value: >-
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_clusterworkflowtemplates.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_cronworkflows.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_workflows.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_workflowtemplates.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_workfloweventbindings.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_workflowtasksets.yaml
          https://raw.githubusercontent.com/argoproj/argo-workflows/${argo.version}/manifests/base/crds/minimal/argoproj.io_workflowtaskresults.yaml
  - name: hub.backup.file
    empty: allow
    env: BACKUP_FILE

templates:
  files:
    - "*.template"
    - "resources/*.template"
  extra:
    - kind: go
      files:
        - "*.gotemplate"
        - "resources/*.gotemplate"
