#!/bin/sh

if test -z "$HUB_BACKUP_DIR"; then
    echo "Error: HUB_BACKUP_DIR has not been defined"
    exit 1
fi

TEMP_DIR=$(mktemp -d)
trap 'rm -rf $TEMP_DIR' EXIT

kubectl="kubectl --context=$HUB_DOMAIN_NAME"

dump_crd() {
    echo "* Backing up: $1..."
    $kubectl get "$1" -o json --all-namespaces \
    | jq -cM '. | del(.items[].metadata.creationTimestamp) | del(.items[].metadata.deletionTimestamp)' \
    | jq -cM '. | del(.items[].metadata.selfLink) | del(.items[].metadata.resourceVersion)' \
    | jq -cM '. | del(.items[].status)  | del(.items[].metadata.uid)' > "$2/$1.json"
}

dump_crd "clusterworkflowtemplates.argoproj.io" "$TEMP_DIR"
dump_crd "cronworkflows.argoproj.io" "$TEMP_DIR"
dump_crd "workfloweventbindings.argoproj.io" "$TEMP_DIR"
dump_crd "workflows.argoproj.io" "$TEMP_DIR"
dump_crd "workflowtemplates.argoproj.io" "$TEMP_DIR"
echo "* Compressing..."
tar -czf "$HUB_BACKUP_DIR/$COMPONENT_NAME.tar.gz" -C "$TEMP_DIR" "."

cat <<EOF

Outputs:
hub.backup.file = $HUB_BACKUP_DIR/$COMPONENT_NAME.tar.gz
EOF
