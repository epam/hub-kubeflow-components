{{$hosts := .ingress.hosts | split | compact }}
{{- if eq .ingress.hosts ""}}
consoleIngress:
  enabled: false
{{- else}}
consoleIngress:
  enabled: true
  {{- if or (eq .ingress.protocol "https") .ingress.class}}
  annotations:
    {{- if eq .ingress.protocol "https"}}
    kubernetes.io/tls-acme: "true"
    {{- end}}
    {{- if ne .ingress.class ""}}
    kubernetes.io/ingress.class: "{{.ingress.class}}"
    {{- end}}
    {{- if eq .ingress.class "nginx"}}
      {{- if eq .ingress.protocol "https"}}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
      {{- end}}
    nginx.org/client-max-body-size: "{{.nginx.fileSize}}"
    nginx.org/websocket-services: "{{.hub.componentName}}-console"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{.nginx.fileSize}}"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "256m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{.nginx.uploadTimeout}}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{.nginx.uploadTimeout}}"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "{{.nginx.uploadTimeout}}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{.nginx.readTimeout}}"
    {{- end}}
  {{- end}}
  path: /
  {{- if .ingress.hosts }}
  hosts:
  {{- range $hosts}}
  - {{.}}
  {{- end }}
{{- end }}
{{- if eq .ingress.protocol "https"}}
  tls:
{{- range $hosts}}
    - hosts: [{{.}}]
      secretName: "{{. | formatSubdomain}}-tls"
{{- end}}
{{- end}}
{{- end}}
